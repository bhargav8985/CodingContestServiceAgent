// backend/services/geminiService.js
const axios = require('axios');
require('dotenv').config();

const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
const GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1/models/gemini-2.0-flash:generateContent';

async function formatContests(contestData) {
  try {
    const prompt = `
You are a helpful assistant. Given the following contest data, generate a beautifully formatted HTML page suitable for an email or PDF.

Requirements:
- Group contests by platform.
- Use a clean and modern design with sections, borders, and spacing.
- Display for each contest:
  - Contest Name (as a clickable link if available)
  - Start Time (in IST)
  - Duration
  - Rating Range (if available)
- Use a header titled "Upcoming Competitive Programming Contests".
- Each platform should be a section with a heading and its contests listed beneath.
- Use consistent fonts, spacing, and subtle background colors.
- Add table borders or card-like elements for better layout.
- Fit the content neatly on an A4-size email body or PDF.
- It should be unique and beautiful like never seen before. 
- The patterns should be clean and not just a simple table.
- The footer should be a simple text "Generated by Contest Email Service".
Input Contest Data:
${JSON.stringify(contestData, null, 2)}

Output:
Return only the complete HTML content as a string, without explanation or markdown.
    `;

    const response = await axios.post(
      `${GEMINI_API_URL}?key=${GEMINI_API_KEY}`,
      {
        contents: [
          {
            parts: [
              { text: prompt }
            ]
          }
        ]
      },
      {
        headers: {
          'Content-Type': 'application/json'
        }
      }
    );

    const geminiText = response.data.candidates?.[0]?.content?.parts?.[0]?.text || 'No summary available.';
    return geminiText;
  } catch (error) {
    console.error('‚ùå Gemini API Error:', error?.response?.data || error.message);
    throw error;
  }
}

module.exports = {
  formatContests,
};
